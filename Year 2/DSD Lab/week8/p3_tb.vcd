$date
	Mon Oct 16 14:48:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module p3_tb $end
$var wire 4 ! A [3:0] $end
$var reg 4 " I [3:0] $end
$var reg 2 # S [1:0] $end
$var reg 1 $ clk $end
$var reg 1 % inp $end
$scope module out $end
$var wire 4 & I [3:0] $end
$var wire 2 ' S [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % inp $end
$var wire 4 ( M3 [3:0] $end
$var wire 4 ) M2 [3:0] $end
$var wire 4 * M1 [3:0] $end
$var wire 4 + M0 [3:0] $end
$var wire 4 , D [3:0] $end
$var wire 4 - A [3:0] $end
$scope module st0 $end
$var wire 2 . S [1:0] $end
$var wire 4 / W [3:0] $end
$var reg 1 0 F $end
$upscope $end
$scope module st1 $end
$var wire 2 1 S [1:0] $end
$var wire 4 2 W [3:0] $end
$var reg 1 3 F $end
$upscope $end
$scope module st2 $end
$var wire 2 4 S [1:0] $end
$var wire 4 5 W [3:0] $end
$var reg 1 6 F $end
$upscope $end
$scope module st3 $end
$var wire 2 7 S [1:0] $end
$var wire 4 8 W [3:0] $end
$var reg 1 9 F $end
$upscope $end
$scope module st4 $end
$var wire 1 : D $end
$var wire 1 $ clk $end
$var reg 1 ; Q $end
$upscope $end
$scope module st5 $end
$var wire 1 < D $end
$var wire 1 $ clk $end
$var reg 1 = Q $end
$upscope $end
$scope module st6 $end
$var wire 1 > D $end
$var wire 1 $ clk $end
$var reg 1 ? Q $end
$upscope $end
$scope module st7 $end
$var wire 1 @ D $end
$var wire 1 $ clk $end
$var reg 1 A Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xA
1@
x?
0>
x=
0<
x;
0:
19
bx11 8
b1 7
06
bx0x 5
b1 4
03
bx0x 2
b1 1
00
bx0x /
b1 .
bx -
b1 ,
bx11 +
bx0x *
bx0x )
bx0x (
b1 '
b1 &
1%
0$
b1 #
b1 "
bx !
$end
#10
b0 (
b0 /
b0 )
b0 2
b1111 +
b1111 8
b1 *
b1 5
0;
0=
0?
b1 !
b1 -
1A
1$
#20
1>
b11 ,
16
0$
b0 #
b0 '
b0 .
b0 1
b0 4
b0 7
#30
1<
b111 ,
13
b1101 *
b1101 5
b1 )
b1 2
b11 !
b11 -
1?
1$
#40
b10 (
b10 /
b11 )
b11 2
b1111 *
b1111 5
0$
b1111 "
b1111 &
#50
1:
b1111 ,
10
b1111 )
b1111 2
b11 (
b11 /
b111 !
b111 -
1=
1$
#60
0$
